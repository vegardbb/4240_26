package com.snakeladders.model;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class ChanceField extends Field{

    private int id;

    /**
    Model class for the field that contains all the things that make up our implementation of Stigespillet

    Contents:

    All fields are generated by the GameScreenController Class. This class makes sure that you wo't be telwported ad infinitum.
    This class does nothing, aside from contributing to represent the state of the game.
    @Override
    public int getId() {
        return id;
    }

    @Override
    public Field getTeleportToField() {
        return teleportToField;
    }

    @Override
    public Board getBoard() {
        return board;
    }
     **/

    private enum Type {KEEPCARD, NEWTURN, DOUBLE, START, BACKWARDS} // Class within me
    private Type fieldtype;
    private Field teleportToField; //Used by ladderFields and occasionally chancefields, normally null for Normalfield.
    private Board board; // Reference to the board the field belongs to.

    public ChanceField(Board board, int i, Field teleportToField, Type type) {
        super(board,i,teleportToField);
        this.fieldtype = randomChoice(); // Choose a type randomly.
    }
    public Type getFieldType(){ return this.fieldtype; }

    // Fields for choosing a random ChanceField Type
    private static final List<Type> VALUES =
            Collections.unmodifiableList(Arrays.asList(Type.values()));
    private static final int SIZE = VALUES.size();
    private static final Random RANDOM = new Random();

    private static Type randomChoice()  {
        return VALUES.get(RANDOM.nextInt(SIZE));
    }


}